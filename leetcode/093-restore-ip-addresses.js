/**
 * @param {string} s
 * @return {string[]}
 */
var restoreIpAddresses = function(s) {
  const results = [];
  if (!s) {
    return results;
  }
  if (s.length > 12) {
      return results;
  }
  var dfs = function(idx, ip) {
    let segment = ''
    while (idx <= s.length) {
      if (ip.length === 4 && idx === s.length) {
          const removedLeadingZeroes = ip.map(s => parseInt(s, 10))
          const length = removedLeadingZeroes.join('').length
          if (length === s.length) {
            const validIp = removedLeadingZeroes.join(".");
            results.push(validIp);
          }
      }
      const nextChar = parseInt(s.charAt(idx), 10);
      const nextSegment = segment + nextChar;
      if (nextSegment <= 255) {
        ip.push(nextSegment);
        dfs(idx + 1, ip);
        ip.pop(nextSegment);
      }
      idx += 1;
      segment = segment + nextChar
    }
  };

  dfs(0, []);
  return results;
};

console.log(restoreIpAddresses("25525511135"));
console.log(restoreIpAddresses("010010"));
let long
console.log(restoreIpAddresses(long));